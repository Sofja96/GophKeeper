// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/server/app/app.go

// Package mock_app is a generated GoMock package.
package mock_app

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	logging "github.com/Sofja96/GophKeeper.git/internal/server/logger"
	service "github.com/Sofja96/GophKeeper.git/internal/server/service"
	settings "github.com/Sofja96/GophKeeper.git/internal/server/settings"
	db "github.com/Sofja96/GophKeeper.git/internal/server/storage/db"
	minio "github.com/Sofja96/GophKeeper.git/internal/server/storage/minio"
)

// MockServer is a mock of Server interface.
type MockServer struct {
	ctrl     *gomock.Controller
	recorder *MockServerMockRecorder
}

// MockServerMockRecorder is the mock recorder for MockServer.
type MockServerMockRecorder struct {
	mock *MockServer
}

// NewMockServer creates a new mock instance.
func NewMockServer(ctrl *gomock.Controller) *MockServer {
	mock := &MockServer{ctrl: ctrl}
	mock.recorder = &MockServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServer) EXPECT() *MockServerMockRecorder {
	return m.recorder
}

// GetDbAdapter mocks base method.
func (m *MockServer) GetDbAdapter() db.Adapter {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDbAdapter")
	ret0, _ := ret[0].(db.Adapter)
	return ret0
}

// GetDbAdapter indicates an expected call of GetDbAdapter.
func (mr *MockServerMockRecorder) GetDbAdapter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDbAdapter", reflect.TypeOf((*MockServer)(nil).GetDbAdapter))
}

// GetLogger mocks base method.
func (m *MockServer) GetLogger() logging.ILogger {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLogger")
	ret0, _ := ret[0].(logging.ILogger)
	return ret0
}

// GetLogger indicates an expected call of GetLogger.
func (mr *MockServerMockRecorder) GetLogger() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLogger", reflect.TypeOf((*MockServer)(nil).GetLogger))
}

// GetMinioClient mocks base method.
func (m *MockServer) GetMinioClient() minio.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMinioClient")
	ret0, _ := ret[0].(minio.Client)
	return ret0
}

// GetMinioClient indicates an expected call of GetMinioClient.
func (mr *MockServerMockRecorder) GetMinioClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMinioClient", reflect.TypeOf((*MockServer)(nil).GetMinioClient))
}

// GetService mocks base method.
func (m *MockServer) GetService() service.Service {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetService")
	ret0, _ := ret[0].(service.Service)
	return ret0
}

// GetService indicates an expected call of GetService.
func (mr *MockServerMockRecorder) GetService() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetService", reflect.TypeOf((*MockServer)(nil).GetService))
}

// GetSettings mocks base method.
func (m *MockServer) GetSettings() settings.Settings {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSettings")
	ret0, _ := ret[0].(settings.Settings)
	return ret0
}

// GetSettings indicates an expected call of GetSettings.
func (mr *MockServerMockRecorder) GetSettings() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSettings", reflect.TypeOf((*MockServer)(nil).GetSettings))
}
